x<-1:20
x
x<-list(1,'a',TRUE,1+4i)
print(x)
dim(x1)<-c(2,5)
x1<-1:20
dim(x1)<-c(2,5)
dim(x1)<-c(4,5)
print(x1)
x<-factor(c('yes','no,'yes','yes','no'))
x<- factor(c('yes','no,'yes','yes','no'))
x<-factor(c('yes','no','yes','yes','no'))
x
table(x)
unclass(x)
x<-factor(c('yes','no','yes','yes','no'),levels=c('yes','no'))
x
x<-data.frame(foo=1:4,bar=c(T,T,F,F))
x
x=10
x
as.logical(x)
q()
x<-c('a','b','c','c','d','a')
x
u<-x>'a'
u
x(u)
x[u]
x=list(foo=1:4,bar=0.6,baz="hello")
x[c(1,3)]
x<-list(aardvark=1:5)
x
x$a
x<-list(aardvark=1:5,ardnak=6:10)
x$a
x[['a',exact=false]]
x[['a',exact=FALSE]]
x<-list(aardvark=1:5)
x[['a',exact=FALSE]]
x<-(1,2,NA,3,NA,5,NA)
x<-c(1,2,NA,3,NA,5,NA)
bad<-is.na(x)
bad
x[!bad]
y<-('a','b',NA,'c',NA,'d',NA)
y<-c('a','b',NA,'c',NA,'d',NA)
good<-complete.cases(x,y)
good
y<-c('a','b',NA,'c',NA,'d','f')
good<-complete.cases(x,y)
good
x[good]
y[good]
airquality[1:6,]
airquality[good]
good<-complete.cases(airquality)
airquality[good]
airquality[good,]
airquality[good,][1:6,]
x<-1:3;y<-6:9
x+y
y+x
x<-1:3;y<-6:8
y+x
x<-matrix(1:4,2,2);y<-matrix(10:13,2,2)
x*y
q()
install.packages("sand")
install.packages("knitr")
install.packages("ergm")
library(datasets)
head(airquality)
str(airqualit)
str(airquality)
s<-split(airquality,airquality$month)
s<-split(airquality,airquality$Month)
str(s)
x<c('a','b','c','d')
x<-c('a','b','c','d')
for (i in 1:4){}
for (i in 1:4){print(x[i])}
for (i in seq_along(x)){print(x[i])}
seq_along(x)
for letter in x {print letter}
for letter in x {print (letter)}
for (letter in x) {print (letter)}
print(i+1)
print(x[i+1])
print(x[i-1])
for (i in 1:4)  print(x[i])
print(x[i-1])
z<-Z-1
}
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
} else
} else{
z<-Z-1
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5 while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-z+1
} else{
z<-z-1
}
}
setwd("C:/Users/TG/OneDrive/Documents/CSC 495/lab1/lab1")
setwd("C:/Users/TG/OneDrive/Documents/CSC 495/lab1/lab1")
kr.advice<-read.table("krack-advice-edges.txt")
View(kr.advice)
View(kr.advice)
kr.friend<-read.table("krack-friend-edges.txt")
kr.reports<-read.table("krack-reports-edges.txt")
kr.attrs<-read.csv("krack-attrs.csv")
View(kr.attrs)
View(kr.attrs)
kr.df<-data.frame(ego=kr.advice[,1],alter=kr.advice[,2],advice=kr.advice[,3],friend=kr.friend[,3],reports=kr.reports[,3])
View(kr.df)
View(kr.df)
kr.nz<-kr.df[kr.df$advice+kr.df$friend+kr.df$reports>0,]
View(kr.nz)
View(kr.nz)
kr.net<-graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
install.packages("igraph")
kr.net<-graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
kr.net <- graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
kr.net <- graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
kr.net <- graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
library("igraph")
kr.net <- graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
kr.net <- graph.edgelist(cbind(kr.nz$ego,kr.nz$alter),directed=TRUE)
kr.net
plot(kr.net)
View(kr.nz)
E(kr.net)$advice<-kr.nz$advice
kr.net
E(kr.net)$friend<-kr.nz$friend
E(kr.net)$reports<-kr.nz$reports
kr.net
v(kr.net)$age<-kr.attrs$AGE
v(kr.net)$tenure<-kr.attrs$TENURE
v(kr.net)$dept<-kr.attrs$DEPT
v(kr.net)$level<-kr.attrs$LEVEL
V(kr.net)$age<-kr.attrs$AGE
V(kr.net)$tenure<-kr.attrs$TENURE
V(kr.net)$dept<-kr.attrs$DEPT
V(kr.net)$level<-kr.attrs$LEVEL
kr.net
plot(kr.net)
View(kr.attrs)
View(kr.attrs)
advice.net<-delete.edges(kr.net,which(E(kr.net)$advice==0))
plot(advice.net)
friend.net<-delete.edges(kr.net,which(E(kr.net)$friend==0))
reports.net<-delete.edges(kr.net,which(E(kr.net)$reports==0))
reports.net
friends.net
friend.net
plot(kr.net,vertex.label=na)
plot(kr.net,vertex.label=NA)
plot(kr.net,vertex.label=NA,edge.arrow.size=0.5)
plot(kr.net,vertex.label=NA,edge.arrow.size=0.5,main="Full Network")
plot(kr.net,vertex.label=NA,edge.arrow.size=0.5,main="Full Network")
plot(advice.net,vertex.label=NA,edge.arrow.size=0.5,main="Advice Network")
plot(friend.net,vertex.label=NA,edge.arrow.size=0.5,main="Friend Network")
plot(reports.net,vertex.label=NA,edge.arrow.size=0.5,main="Reports Network")
# Creates a 2x2 array of plots
par(mfrow=c(2,2))
plot(kr.net,vertex.label=NA,edge.arrow.size=0.5,main="Full Network")
plot(advice.net,vertex.label=NA,edge.arrow.size=0.5,main="Advice Network")
plot(friend.net,vertex.label=NA,edge.arrow.size=0.5,main="Friend Network")
plot(reports.net,vertex.label=NA,edge.arrow.size=0.5,main="Reports Network")
par(mfrow=c(2,2))
plot(kr.net,vertex.label=NA,edge.arrow.size=0.2,main="Full Network")
plot(advice.net,vertex.label=NA,edge.arrow.size=0.2,main="Advice Network")
plot(friend.net,vertex.label=NA,edge.arrow.size=0.2,main="Friend Network")
plot(reports.net,vertex.label=NA,edge.arrow.size=0.2,main="Reports Network")
pdf("lab1-all-nets.pdf")
par(mfrow=c(2,2))
plot(kr.net,vertex.label=NA,edge.arrow.size=0.2,main="Full Network")
plot(advice.net,vertex.label=NA,edge.arrow.size=0.2,main="Advice Network")
plot(friend.net,vertex.label=NA,edge.arrow.size=0.2,main="Friend Network")
plot(reports.net,vertex.label=NA,edge.arrow.size=0.2,main="Reports Network")
# Goes back to 1 plot at a time
par(mfrow=c(1,1))
# Closes the file
dev.off()
plot(advice.net,vertex.size=v(advice.net)$tenure,vertex.label=NA,edge.arrow.size=0.2)
plot(advice.net,vertex.size=V(advice.net)$tenure,vertex.label=NA,edge.arrow.size=0.2)
advice.ind<-degree(advice.net,mode='in')
advice.ind
advice.lm<-lm(advice.ind~V(advice.net)$tenure)
show(advice.lm)
hist(advice.ind)
summary(advice.ind)
summary(advice.lm)
plot(V(advice.net)$tenure,advice.ind)
plot(V(advice.net)$tenure,advice.ind)
abline(advice.lm)
plot(advice.lm,which=2)
source('C:/Users/TG/OneDrive/Documents/CSC 495/lab1/lab1/lab1.R')
