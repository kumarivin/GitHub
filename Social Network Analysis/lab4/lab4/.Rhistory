x<-1:20
x
x<-list(1,'a',TRUE,1+4i)
print(x)
dim(x1)<-c(2,5)
x1<-1:20
dim(x1)<-c(2,5)
dim(x1)<-c(4,5)
print(x1)
x<-factor(c('yes','no,'yes','yes','no'))
x<- factor(c('yes','no,'yes','yes','no'))
x<-factor(c('yes','no','yes','yes','no'))
x
table(x)
unclass(x)
x<-factor(c('yes','no','yes','yes','no'),levels=c('yes','no'))
x
x<-data.frame(foo=1:4,bar=c(T,T,F,F))
x
x=10
x
as.logical(x)
q()
x<-c('a','b','c','c','d','a')
x
u<-x>'a'
u
x(u)
x[u]
x=list(foo=1:4,bar=0.6,baz="hello")
x[c(1,3)]
x<-list(aardvark=1:5)
x
x$a
x<-list(aardvark=1:5,ardnak=6:10)
x$a
x[['a',exact=false]]
x[['a',exact=FALSE]]
x<-list(aardvark=1:5)
x[['a',exact=FALSE]]
x<-(1,2,NA,3,NA,5,NA)
x<-c(1,2,NA,3,NA,5,NA)
bad<-is.na(x)
bad
x[!bad]
y<-('a','b',NA,'c',NA,'d',NA)
y<-c('a','b',NA,'c',NA,'d',NA)
good<-complete.cases(x,y)
good
y<-c('a','b',NA,'c',NA,'d','f')
good<-complete.cases(x,y)
good
x[good]
y[good]
airquality[1:6,]
airquality[good]
good<-complete.cases(airquality)
airquality[good]
airquality[good,]
airquality[good,][1:6,]
x<-1:3;y<-6:9
x+y
y+x
x<-1:3;y<-6:8
y+x
x<-matrix(1:4,2,2);y<-matrix(10:13,2,2)
x*y
q()
install.packages("sand")
install.packages("knitr")
install.packages("ergm")
library(datasets)
head(airquality)
str(airqualit)
str(airquality)
s<-split(airquality,airquality$month)
s<-split(airquality,airquality$Month)
str(s)
x<c('a','b','c','d')
x<-c('a','b','c','d')
for (i in 1:4){}
for (i in 1:4){print(x[i])}
for (i in seq_along(x)){print(x[i])}
seq_along(x)
for letter in x {print letter}
for letter in x {print (letter)}
for (letter in x) {print (letter)}
print(i+1)
print(x[i+1])
print(x[i-1])
for (i in 1:4)  print(x[i])
print(x[i-1])
z<-Z-1
}
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
} else
} else{
z<-Z-1
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5 while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-Z+1
} else{
z<-Z-1
}
}
z <- 5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if (coin==1){
z<-z+1
} else{
z<-z-1
}
}
df<-data.frame(social=c(social.opt,social.btw),socialR=c(socialr.opt,socialr.btw),task=c(task.opt,task.btw),taskr=c(taskr.opt,taskr.btw))
socialr.opt<-assortativity.nominal(m182.social.rand,types=membership(m182.opt))
N<-100
x<-rnorm(N)+1;y<-rnorm(N)+1;dat<-data.frame(x,y)
x<-rnorm(N)+5;y<-rnorm(N)+1;dat<-data.frame(dat,data.frame(x,y))
x<-rnorm(N)+1;y<-rnorm(N)+5;dat<-data.frame(dat,data.frame(x,y))
dat
ob<-kmeans(x, 3, iter.max = 10, nstart = 1,algorithm="Hartigan-Wong", trace=FALSE)
fitted(ob, method = "centers" )
ob
install.packages("network")
install.packages("ergm")
install.packages("latticeExtra")
library(network)
library(ergm)
library(latticeExtra)
library(intergraph)
library(sand)
setwd("C:/Users/TG/Documents/495/lec0521/lec0521")
source("lec0521-utils.R")
gr3 <- read.graph("third.graphml", format="graphml")
gr4 <- read.graph("fourth.graphml", format="graphml")
gr5 <- read.graph("fifth.graphml", format="graphml")
gr.assort <- c(assortativity.nominal(gr3,
V(gr3)$blue+1,
directed=TRUE),
assortativity.nominal(gr4,
V(gr4)$blue+1,
directed=TRUE),
assortativity.nominal(gr5,
V(gr5)$blue+1,
directed=TRUE))
gr.density <- c(graph.density(gr3), graph.density(gr4), graph.density(gr5))
gr.trans <- c(transitivity(gr3, type="global"),
transitivity(gr4, type="global"),
transitivity(gr5, type="global"))
gr.recip <- c(reciprocity(gr3), reciprocity(gr4), reciprocity(gr5))
plot(1:3, gr.assort, pch=1, lty=1, type="b", col="blue",
xlab="Time", xlim=c(1,3), xaxp=c(1,3,2),
ylab="Value", ylim=c(-0.25, 1.2))
lines(gr.density, col="red", pch=2, type="b")
lines(gr.trans, col="green", pch=3, type="b")
lines(gr.recip, col="black", pch=4, type="b")
legend("top", pch=1:4, legend=c("Assortativity", "Density", "Transitivity",
"Reciprocity"),
col=c("blue", "red", "green", "black"), horiz=T, cex=0.5)
net3 <- asNetwork(gr3)
net4 <- asNetwork(gr4)
net3 <- asNetwork(gr3)
getNewsfeed(token,n=20)
token="CAACEdEose0cBAPbXtT6CkwZCdUFZBB2yteONlTBz4J5dzA8Jw7PJerb8YHtHOZB70QlpqBoJhNleRcQ0DEfVB9WXxWmszsvpycJ59Quz1ShlfkwztICORNfVKrHuextqH8XCZBZBsKV7IRihIfM1Vy1ZArBlGLLj7KLLCeL9eAq9DROjp5uDirOfYhjMIzLrNOiprZCxNzAwRZAT4fwBESNq"
getNewsfeed(token,n=20)
token="CAACEdEose0cBAPbXtT6CkwZCdUFZBB2yteONlTBz4J5dzA8Jw7PJerb8YHtHOZB70QlpqBoJhNleRcQ0DEfVB9WXxWmszsvpycJ59Quz1ShlfkwztICORNfVKrHuextqH8XCZBZBsKV7IRihIfM1Vy1ZArBlGLLj7KLLCeL9eAq9DROjp5uDirOfYhjMIzLrNOiprZCxNzAwRZAT4fwBESNq"
getNewsfeed(token,n=20)
library(Rfacebook)
token="CAACEdEose0cBAPbXtT6CkwZCdUFZBB2yteONlTBz4J5dzA8Jw7PJerb8YHtHOZB70QlpqBoJhNleRcQ0DEfVB9WXxWmszsvpycJ59Quz1ShlfkwztICORNfVKrHuextqH8XCZBZBsKV7IRihIfM1Vy1ZArBlGLLj7KLLCeL9eAq9DROjp5uDirOfYhjMIzLrNOiprZCxNzAwRZAT4fwBESNq"
getNewsfeed(token,n=20)
install.packages("intergraph")
net3 <- asNetwork(gr3)
library(intergraph)
net3 <- asNetwork(gr3)
library(network)
library(ergm)
library(latticeExtra)
library(intergraph)
library(sand)
# Thanks to Benjamin Lind for the data and examples
setwd("C:/Users/TG/Documents/495/lab4/lab4")
source("lab4-utils.R")
ga.gr <- read.graph("ga.graphml", format="graphml")
gaplot(ga.gr,names=TRUE)
ga.net<-asNetwork(ga.gr)
ga.m1<-ergm(ga.gr ~ edges+nodemix("sex",base=-2))
ga.m1<-ergm(ga.net ~ edges+nodemix("sex",base=-2))
summary(ga.m1)
fm.edge.lo<-coef(ga.m1)
fm.edge.lo<-coef(ga.m1)[1]+coef(ga.m1)[2]
invlogit(fm.edge.lo)
fm.edge.lo<-coef(ga.m1)[1]
invlogit(fm.edge.lo)
fm.edge.lo<-coef(ga.m1)[1]+coef(ga.m1)[2]
invlogit(fm.edge.lo)
ga.sim<-Simulate(ga.m1)
ga.sim<-simulate(ga.m1)
gaplot(ga.sim,names=TRUE)
gaplot(ga.sim,names=FALSE)
gaplot(asIgraph(ga.sim),names=FALSE)
ga.m1.gof<-gof(ga.m1)
Plot(ga.m1.gof)
plot(ga.m1.gof)
ga.m2<-ergm(ga.net ~ edges+nodemix("sex",base=-2)+degree(1))
summary(ga.m2)
mcmc.diagnostics(ga.m2)
ga.m2.gofm<-gof(ga.m2,FOG=model)
plot(ga.m2.gofm)
ga.m2.gof<-gof(ga.m2)
plot(ga.m2.gof)
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
ga.m2<-ergm(ga.net ~ edges+nodemix("sex",base=-2)+degree(1),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
ga.m3<-ergm(ga.net ~ edges+nodemix("sex",base=-2)+degree(1),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
summary(ga.m3)
mcmc.diagnostics(ga.m3)
ga.m3.gofm<-gof(ga.m3,FOG=model)
plot(ga.m3.gofm)
ga.m3.gof<-gof(ga.m3)
plot(ga.m3.gof)
ga.m3.gof
save(ga.m3,file="ga_m3.Rdata")
ga.m4<-ergm(ga.net ~edges+nodemix("sex",base=-2)+degree(1)+abstiff("birthyear"),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
ga.m4<-ergm(ga.net ~edges+nodemix("sex",base=-2)+degree(1)+abdtiff("birthyear"),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
ga.m4<-ergm(ga.net ~edges+nodemix("sex",base=-2)+degree(1)+abdiff("birthyear"),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
ga.m4<-ergm(ga.net ~edges+nodemix("sex",base=-2)+degree(1)+absdiff("birthyear"),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
summary(ga.m4)
mcmc.diagnostics(ga.m4)
ga.m4.gofm<-gof(ga.m4,FOG=model)
ga.m4.gofm
plot(ga.m3.gofm)
plot(ga.m4.gofm)
ga.m3.gof<-gof(ga.m3)
ga.m4.gof<-gof(ga.m4)
ga.m4.gof
plot(ga.m4.gof)
save(ga.m4,file="ga_m4.Rdata")
ga.m5<-ergm(ga.net ~edges+nodemix("sex",base=-2)+degree(1,"sex")+absdiff("birthyear"),
control=control.ergm(MCMC.burnin=50000,MCMC.interval=5000))
summary(ga.m5)
mcmc.diagnostics(ga.m5)
ga.m5.gofm
ga.m5.gofm<-gof(ga.m5,FOG=model)
ga.m5.gofm
plot(ga.m5.gofm)
ga.m5.gof<-gof(ga.m5)
plot(ga.m5.gof)
ga.m5.gof
save(ga.m5,file="ga_m5.Rdata")
gaplot(asIgraph(ga.m5),names=FALSE)
gaplot(asIgraph(simulate(ga.m5),names=FALSE)
gaplot(asIgraph(simulate(ga.m5)),names=FALSE)
# Question 22
gaplot(asIgraph(simulate(ga.m5)),names=FALSE)
deg1f<-coef(ga.m5)[3]
deg1m<-coef(ga.m5)[4]
edge<-coef(ga.m5)[1]
het<-coef(ga.m5)[2]
case1.lo<-edge+het+deg1f+deg1m
case1.lo<-edge+het+deg1f+deg1m
case2.lo<-edge+het+deg1f-deg1m
case3.lo<-edge+het-deg1f+deg1m
case4.lo<-edge+het-deg1f-deg1m
case5.lo<-edge+het
df<-data.frame(case1=invlogit(case1.lo),case2=invlogit(case2.lo)
case3=invlogit(case3.lo),case4=invlogit(case4.lo)
case5=invlogit(case5.lo))
df<-data.frame(case1=invlogit(case1.lo),case2=invlogit(case2.lo),
case3=invlogit(case3.lo),case4=invlogit(case4.lo),
case5=invlogit(case5.lo))
df
library(Rfacebook)
token="CAACEdEose0cBAPbXtT6CkwZCdUFZBB2yteONlTBz4J5dzA8Jw7PJerb8YHtHOZB70QlpqBoJhNleRcQ0DEfVB9WXxWmszsvpycJ59Quz1ShlfkwztICORNfVKrHuextqH8XCZBZBsKV7IRihIfM1Vy1ZArBlGLLj7KLLCeL9eAq9DROjp5uDirOfYhjMIzLrNOiprZCxNzAwRZAT4fwBESNq"
getNewsfeed(token,n=20)
